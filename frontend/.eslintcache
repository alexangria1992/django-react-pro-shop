[{"D:\\Django-React-Pro-Shop\\frontend\\src\\index.js":"1","D:\\Django-React-Pro-Shop\\frontend\\src\\App.js":"2","D:\\Django-React-Pro-Shop\\frontend\\src\\reportWebVitals.js":"3","D:\\Django-React-Pro-Shop\\frontend\\src\\components\\Header.js":"4","D:\\Django-React-Pro-Shop\\frontend\\src\\components\\Footer.js":"5","D:\\Django-React-Pro-Shop\\frontend\\src\\screens\\HomeScreen.js":"6","D:\\Django-React-Pro-Shop\\frontend\\src\\products.js":"7","D:\\Django-React-Pro-Shop\\frontend\\src\\components\\Product.js":"8","D:\\Django-React-Pro-Shop\\frontend\\src\\components\\Rating.js":"9","D:\\Django-React-Pro-Shop\\frontend\\src\\screens\\ProductScreen.js":"10","D:\\Django-React-Pro-Shop\\frontend\\src\\store.js":"11","D:\\Django-React-Pro-Shop\\frontend\\src\\reducers\\productReducers.js":"12","D:\\Django-React-Pro-Shop\\frontend\\src\\constants\\productConstants.js":"13","D:\\Django-React-Pro-Shop\\frontend\\src\\actions\\productActions.js":"14","D:\\Django-React-Pro-Shop\\frontend\\src\\components\\Loader.js":"15","D:\\Django-React-Pro-Shop\\frontend\\src\\components\\Message.js":"16","D:\\Django-React-Pro-Shop\\frontend\\src\\screens\\CartScreen.js":"17","D:\\Django-React-Pro-Shop\\frontend\\src\\reducers\\cartReducers.js":"18","D:\\Django-React-Pro-Shop\\frontend\\src\\constants\\cartConstants.js":"19","D:\\Django-React-Pro-Shop\\frontend\\src\\actions\\cartActions.js":"20","D:\\Django-React-Pro-Shop\\frontend\\src\\reducers\\userReducers.js":"21","D:\\Django-React-Pro-Shop\\frontend\\src\\constants\\userConstants.js":"22","D:\\Django-React-Pro-Shop\\frontend\\src\\screens\\LoginScreen.js":"23","D:\\Django-React-Pro-Shop\\frontend\\src\\actions\\userActions.js":"24","D:\\Django-React-Pro-Shop\\frontend\\src\\components\\FormContainer.js":"25","D:\\Django-React-Pro-Shop\\frontend\\src\\screens\\RegisterScreen.js":"26","D:\\Django-React-Pro-Shop\\frontend\\src\\screens\\ProfileScreen.js":"27","D:\\Django-React-Pro-Shop\\frontend\\src\\screens\\ShippingScreen.js":"28","D:\\Django-React-Pro-Shop\\frontend\\src\\components\\CheckoutSteps.js":"29","D:\\Django-React-Pro-Shop\\frontend\\src\\screens\\PaymentScreen.js":"30","D:\\Django-React-Pro-Shop\\frontend\\src\\screens\\PlaceOrderScreen.js":"31","D:\\Django-React-Pro-Shop\\frontend\\src\\reducers\\orderReducers.js":"32","D:\\Django-React-Pro-Shop\\frontend\\src\\constants\\orderConstants.js":"33","D:\\Django-React-Pro-Shop\\frontend\\src\\actions\\orderActions.js":"34"},{"size":593,"mtime":1612340089454,"results":"35","hashOfConfig":"36"},{"size":1460,"mtime":1613526008667,"results":"37","hashOfConfig":"36"},{"size":362,"mtime":499162500000,"results":"38","hashOfConfig":"36"},{"size":2006,"mtime":1613090187328,"results":"39","hashOfConfig":"36"},{"size":374,"mtime":1612168763130,"results":"40","hashOfConfig":"36"},{"size":1138,"mtime":1612343597775,"results":"41","hashOfConfig":"36"},{"size":2497,"mtime":1612232288624,"results":"42","hashOfConfig":"36"},{"size":1059,"mtime":1612235323063,"results":"43","hashOfConfig":"36"},{"size":1305,"mtime":1612232401517,"results":"44","hashOfConfig":"36"},{"size":4886,"mtime":1612431352511,"results":"45","hashOfConfig":"36"},{"size":1615,"mtime":1613544605291,"results":"46","hashOfConfig":"36"},{"size":1101,"mtime":1612427036582,"results":"47","hashOfConfig":"36"},{"size":366,"mtime":1612425361707,"results":"48","hashOfConfig":"36"},{"size":1301,"mtime":1612994753321,"results":"49","hashOfConfig":"36"},{"size":425,"mtime":1612343367936,"results":"50","hashOfConfig":"36"},{"size":237,"mtime":1612343496834,"results":"51","hashOfConfig":"36"},{"size":4727,"mtime":1612486499123,"results":"52","hashOfConfig":"36"},{"size":1668,"mtime":1613530842116,"results":"53","hashOfConfig":"36"},{"size":295,"mtime":1613530521867,"results":"54","hashOfConfig":"36"},{"size":1370,"mtime":1613525839121,"results":"55","hashOfConfig":"36"},{"size":3211,"mtime":1613347016566,"results":"56","hashOfConfig":"36"},{"size":906,"mtime":1613346908093,"results":"57","hashOfConfig":"36"},{"size":2519,"mtime":1613081531930,"results":"58","hashOfConfig":"36"},{"size":5223,"mtime":1613347148080,"results":"59","hashOfConfig":"36"},{"size":390,"mtime":1612999180111,"results":"60","hashOfConfig":"36"},{"size":4200,"mtime":1613099068248,"results":"61","hashOfConfig":"36"},{"size":4732,"mtime":1613100488337,"results":"62","hashOfConfig":"36"},{"size":3331,"mtime":1613378006491,"results":"63","hashOfConfig":"36"},{"size":1502,"mtime":1613378004796,"results":"64","hashOfConfig":"36"},{"size":1750,"mtime":1613525720068,"results":"65","hashOfConfig":"36"},{"size":6495,"mtime":1613530312217,"results":"66","hashOfConfig":"36"},{"size":1546,"mtime":1613544431673,"results":"67","hashOfConfig":"36"},{"size":414,"mtime":1613544111914,"results":"68","hashOfConfig":"36"},{"size":2312,"mtime":1613545042462,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1y2g2su",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"72"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"72"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"72"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Django-React-Pro-Shop\\frontend\\src\\index.js",[],["148","149"],"D:\\Django-React-Pro-Shop\\frontend\\src\\App.js",[],"D:\\Django-React-Pro-Shop\\frontend\\src\\reportWebVitals.js",[],"D:\\Django-React-Pro-Shop\\frontend\\src\\components\\Header.js",["150"],"import React from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Navbar, Nav, Container, Row, NavDropdown} from 'react-bootstrap'\r\nimport {LinkContainer} from 'react-router-bootstrap'\r\nimport {logout} from '../actions/userActions'\r\n\r\nfunction Header()\r\n{\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const {userInfo} = userLogin\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutHandler = () =>\r\n    {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n           <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\r\n               <Container>\r\n                   <LinkContainer to='/'>\r\n                       <Navbar.Brand >ProShop</Navbar.Brand>\r\n                   </LinkContainer>\r\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n                <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                    <Nav className=\"mr-auto\">\r\n\r\n                    <LinkContainer to='/cart'>\r\n                        <Nav.Link><i className=\"fa fa-shopping-cart\"></i>Cart</Nav.Link>\r\n                    </LinkContainer>\r\n\r\n                    {userInfo ? (\r\n                        <NavDropdown title={userInfo.name} id='username'>\r\n                            <LinkContainer to='/profile'>\r\n                                <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                            </LinkContainer>\r\n\r\n                            <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                        </NavDropdown>\r\n                    ) : (\r\n                        <LinkContainer to='/login'>\r\n                        <Nav.Link><i class=\"fa fa-user\" aria-hidden=\"true\"></i>Login</Nav.Link>\r\n                    </LinkContainer>\r\n                    )}\r\n                    \r\n                    </Nav>\r\n             \r\n                </Navbar.Collapse>\r\n                </Container>\r\n                </Navbar>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","D:\\Django-React-Pro-Shop\\frontend\\src\\components\\Footer.js",[],"D:\\Django-React-Pro-Shop\\frontend\\src\\screens\\HomeScreen.js",["151","152"],"import React, {useState, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport {Row, Col} from 'react-bootstrap'\r\nimport Product from '../components/Product'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport {listProducts} from '../actions/productActions'\r\n\r\nconst HomeScreen = () => {\r\n    const dispatch = useDispatch()\r\n    const productList = useSelector(state => state.productList )\r\n    const {error, loading, products} = productList\r\n\r\n    useEffect(() => {\r\n        dispatch(listProducts())\r\n    \r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <h1>Latest Products</h1>\r\n            {loading ? <Loader/>\r\n            : error ? <Message variant='danger'>{error}</Message>\r\n            :  \r\n                 <Row>\r\n                  {products.map(product => (\r\n                    <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                        <Product product={product}/>\r\n                    </Col>\r\n                    ))}\r\n                  </Row>\r\n            }\r\n      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","D:\\Django-React-Pro-Shop\\frontend\\src\\products.js",[],["153","154"],"D:\\Django-React-Pro-Shop\\frontend\\src\\components\\Product.js",[],"D:\\Django-React-Pro-Shop\\frontend\\src\\components\\Rating.js",[],"D:\\Django-React-Pro-Shop\\frontend\\src\\screens\\ProductScreen.js",[],"D:\\Django-React-Pro-Shop\\frontend\\src\\store.js",["155"],"D:\\Django-React-Pro-Shop\\frontend\\src\\reducers\\productReducers.js",[],"D:\\Django-React-Pro-Shop\\frontend\\src\\constants\\productConstants.js",[],"D:\\Django-React-Pro-Shop\\frontend\\src\\actions\\productActions.js",[],"D:\\Django-React-Pro-Shop\\frontend\\src\\components\\Loader.js",[],"D:\\Django-React-Pro-Shop\\frontend\\src\\components\\Message.js",[],"D:\\Django-React-Pro-Shop\\frontend\\src\\screens\\CartScreen.js",[],"D:\\Django-React-Pro-Shop\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\Django-React-Pro-Shop\\frontend\\src\\constants\\cartConstants.js",[],"D:\\Django-React-Pro-Shop\\frontend\\src\\actions\\cartActions.js",[],"D:\\Django-React-Pro-Shop\\frontend\\src\\reducers\\userReducers.js",[],"D:\\Django-React-Pro-Shop\\frontend\\src\\constants\\userConstants.js",[],"D:\\Django-React-Pro-Shop\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\Django-React-Pro-Shop\\frontend\\src\\actions\\userActions.js",["156"],"import axios from 'axios'\r\nimport {\r\n    USER_LOGIN_REQUEST, \r\n    USER_LOGIN_SUCCESS, \r\n    USER_LOGIN_FAIL, \r\n\r\n    USER_LOGOUT,\r\n\r\n    USER_REGISTER_REQUEST, \r\n    USER_REGISTER_SUCCESS, \r\n    USER_REGISTER_FAIL,\r\n\r\n    USER_DETAILS_REQUEST, \r\n    USER_DETAILS_SUCCESS, \r\n    USER_DETAILS_FAIL, \r\n    USER_DETAILS_RESET,\r\n\r\n    USER_UPDATE_PROFILE_REQUEST, \r\n    USER_UPDATE_PROFILE_SUCCESS, \r\n    USER_UPDATE_PROFILE_FAIL, \r\n    USER_UPDATE_PROFILE_RESET, \r\n    } from '../constants/userConstants.js'\r\n\r\n\r\n    export const login = (email, password) => async (dispatch) => \r\n    {\r\n        try {\r\n            dispatch({\r\n                type: USER_LOGIN_REQUEST\r\n            })\r\n\r\n            const config = {\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                }\r\n            }\r\n\r\n            const {data} = await axios.post(\r\n                '/api/users/login/', {'username': email, 'password': password},\r\n                config\r\n                )\r\n\r\n                dispatch({\r\n                    type: USER_LOGIN_SUCCESS,\r\n                    payload: data\r\n                })\r\n\r\n                localStorage.setItem('userInfo', JSON.stringify(data))\r\n                \r\n        } catch (error) {\r\n            dispatch({\r\n                type: USER_LOGIN_FAIL,\r\n                payload: error.response && error.response.data.detail \r\n                ? error.response.data.detail \r\n                : error.message\r\n            })\r\n        }\r\n    }\r\n\r\n    export const logout = () => (dispatch) => {\r\n        localStorage.removeItem('userInfo')\r\n        dispatch({type:USER_LOGOUT})\r\n        dispatch({type:USER_DETAILS_RESET})\r\n\r\n    }\r\n\r\n\r\n    export const register = (name, email, password) => async (dispatch) => \r\n    {\r\n        try {\r\n            dispatch({\r\n                type: USER_REGISTER_REQUEST\r\n            })\r\n\r\n            const config = {\r\n                headers: {\r\n                    'Content-type': 'application/json'\r\n                }\r\n            }\r\n\r\n            const {data} = await axios.post(\r\n                '/api/users/register/', {'name' : name, 'email': email, 'password': password},\r\n                config\r\n                )\r\n\r\n                dispatch({\r\n                    type: USER_REGISTER_SUCCESS,\r\n                    payload: data\r\n                })\r\n                \r\n                dispatch({\r\n                    type: USER_LOGIN_SUCCESS,\r\n                    payload: data\r\n                })\r\n\r\n                localStorage.setItem('userInfo', JSON.stringify(data))\r\n                \r\n        } catch (error) {\r\n            dispatch({\r\n                type: USER_REGISTER_FAIL,\r\n                payload: error.response && error.response.data.detail \r\n                ? error.response.data.detail \r\n                : error.message\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    \r\n    export const getUserDetails = (id) => async (dispatch, getState) => \r\n    {\r\n        try {\r\n            dispatch({\r\n                type: USER_DETAILS_REQUEST\r\n            })\r\n\r\n            const {\r\n                userLogin: {userInfo},\r\n            } = getState()\r\n\r\n            const config = {\r\n                headers: {\r\n                    'Content-type': 'application/json',  \r\n                    Authorization: `Bearer ${userInfo.token} `\r\n                }\r\n            }\r\n\r\n            const {data} = await axios.get(\r\n                `/api/users/${id}/`, \r\n                config\r\n                )\r\n\r\n                dispatch({\r\n                    type: USER_DETAILS_SUCCESS,\r\n                    payload: data\r\n                })\r\n\r\n                \r\n        } catch (error) {\r\n            dispatch({\r\n                type: USER_DETAILS_FAIL,\r\n                payload: error.response && error.response.data.detail \r\n                ? error.response.data.detail \r\n                : error.message\r\n            })\r\n        }\r\n    }\r\n\r\n    export const updateUserProfile = (user) => async (dispatch, getState) => \r\n    {\r\n        try {\r\n            dispatch({\r\n                type: USER_UPDATE_PROFILE_REQUEST\r\n            })\r\n\r\n            const {\r\n                userLogin: {userInfo},\r\n            } = getState()\r\n\r\n            const config = {\r\n                headers: {\r\n                    'Content-type': 'application/json',  \r\n                    Authorization: `Bearer ${userInfo.token} `\r\n                }\r\n            }\r\n\r\n            const {data} = await axios.put(\r\n                `/api/users/profile/update/`, \r\n                user,\r\n                config\r\n                )\r\n\r\n                dispatch({\r\n                    type: USER_UPDATE_PROFILE_SUCCESS,\r\n                    payload: data\r\n                })\r\n\r\n                dispatch({\r\n                    type: USER_LOGIN_SUCCESS,\r\n                    payload: data\r\n                })\r\n\r\n            localStorage.setItem('userInfo', JSON.stringify(data))\r\n        } catch (error) {\r\n            dispatch({\r\n                type: USER_UPDATE_PROFILE_FAIL,\r\n                payload: error.response && error.response.data.detail \r\n                ? error.response.data.detail \r\n                : error.message\r\n            })\r\n        }\r\n    }","D:\\Django-React-Pro-Shop\\frontend\\src\\components\\FormContainer.js",[],"D:\\Django-React-Pro-Shop\\frontend\\src\\screens\\RegisterScreen.js",["157"],"import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Button, Row, Col} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport FormContainer from '../components/FormContainer'\r\nimport {register} from '../actions/userActions'\r\n\r\nfunction RegisterScreen({location, history}) {\r\n\r\n    const  [name, setName] = useState('')\r\n    const  [email, setEmail] = useState('')\r\n    const  [password, setPassword] = useState('')\r\n    const  [confirmPassword, setConfirmPassword] = useState('')\r\n    const  [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n\r\n    const {error, loading, userInfo} = userRegister\r\n\r\n    useEffect(() => {\r\n        if(userInfo)\r\n        {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect ])\r\n\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password != confirmPassword)\r\n        {\r\n            setMessage('Passwords do not match!')\r\n        }\r\n        else\r\n        {\r\n            dispatch(register(name, email, password))\r\n\r\n        }\r\n\r\n    }\r\n    return (\r\n        <FormContainer>\r\n              <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n           \r\n                <Form.Group controlId='name'>\r\n                        <Form.Label>\r\n                            Name\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                        required\r\n                        type=\"name\" \r\n                        placeholder=\"Enter Name\" \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)}>\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>\r\n                            Email Address\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                        required\r\n                        type=\"email\" \r\n                        placeholder=\"Enter Email\" \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>\r\n                            Password\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                        required\r\n                        type=\"password\" \r\n                        placeholder=\"Enter Password\" \r\n                        value={password} \r\n                        onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                        </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>\r\n                            Confirm Password\r\n                        </Form.Label>\r\n                        <Form.Control \r\n                        required\r\n                        type=\"password\" \r\n                        placeholder=\"Confirm Password\" \r\n                        value={confirmPassword} \r\n                        onChange={(e) => setConfirmPassword(e.target.value)}>\r\n\r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Register</Button>\r\n            </Form>\r\n            <Row className=\"py-3\">\r\n                <Col>\r\n                    Have an Account? \r\n                    <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Sign In</Link>\r\n                </Col>\r\n            </Row>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","D:\\Django-React-Pro-Shop\\frontend\\src\\screens\\ProfileScreen.js",["158","159"],"import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport {Form, Button, Row, Col} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport {getUserDetails, updateUserProfile} from '../actions/userActions'\r\nimport {USER_UPDATE_PROFILE_RESET} from '../constants/userConstants'\r\n\r\nfunction ProfileScreen({history}) {\r\n    const  [name, setName] = useState('')\r\n    const  [email, setEmail] = useState('')\r\n    const  [password, setPassword] = useState('')\r\n    const  [confirmPassword, setConfirmPassword] = useState('')\r\n    const  [message, setMessage] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const {error, loading, user} = userDetails\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n\r\n    useEffect(() => {\r\n        if(!userInfo)\r\n        {\r\n            history.push('/login')\r\n        }\r\n        else\r\n        {\r\n            if(!user || !user.name || success)\r\n            {\r\n                dispatch({type: USER_UPDATE_PROFILE_RESET })\r\n                dispatch(getUserDetails('profile'))\r\n            }\r\n            else\r\n            {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user, success ])\r\n\r\n\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password != confirmPassword)\r\n        {\r\n            setMessage('Passwords do not match!')\r\n        }\r\n        else\r\n        {\r\n            dispatch(updateUserProfile({\r\n                'id': user._id,\r\n                'name': name,\r\n                'email': email,\r\n                'password': password\r\n            }))\r\n\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n                <h2>User Profile</h2>\r\n                {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader/>}\r\n            <Form onSubmit={submitHandler}>\r\n           \r\n                <Form.Group controlId='name'>\r\n                        <Form.Label>\r\n                            Name\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                        required\r\n                        type=\"name\" \r\n                        placeholder=\"Enter Name\" \r\n                        value={name} \r\n                        onChange={(e) => setName(e.target.value)}>\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>\r\n                            Email Address\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                        required\r\n                        type=\"email\" \r\n                        placeholder=\"Enter Email\" \r\n                        value={email} \r\n                        onChange={(e) => setEmail(e.target.value)}>\r\n\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='password'>\r\n                        <Form.Label>\r\n                            Password\r\n                        </Form.Label>\r\n                        <Form.Control\r\n                        \r\n                        type=\"password\" \r\n                        placeholder=\"Enter Password\" \r\n                        value={password} \r\n                        onChange={(e) => setPassword(e.target.value)}>\r\n\r\n                        </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='passwordConfirm'>\r\n                        <Form.Label>\r\n                            Confirm Password\r\n                        </Form.Label>\r\n                        <Form.Control \r\n                        \r\n                        type=\"password\" \r\n                        placeholder=\"Confirm Password\" \r\n                        value={confirmPassword} \r\n                        onChange={(e) => setConfirmPassword(e.target.value)}>\r\n\r\n                        </Form.Control>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>Update</Button>\r\n            </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","D:\\Django-React-Pro-Shop\\frontend\\src\\screens\\ShippingScreen.js",["160"],"import React, {useState, useEffect} from 'react'\r\nimport {Form, Button} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport {saveShippingAddress} from '../actions/cartActions'\r\n\r\n\r\nfunction ShippingScreen({history}) {\r\n   \r\n    const cart = useSelector(state => state.cart)\r\n    const {shippingAddress} = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const  [address, setAddress] = useState(shippingAddress.address)\r\n    const  [city, setCity] = useState(shippingAddress.city)\r\n    const  [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const  [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({address, city, postalCode, country }))\r\n        history.push('/payment')\r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2/>\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n\r\n               <Form.Group controlId='address'>\r\n                    <Form.Label>\r\n                        Address\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type=\"text\" \r\n                    placeholder=\"Enter Address\" \r\n                    value={address ? address : ''} \r\n                    onChange={(e) => setAddress(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>\r\n                        City\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type=\"text\" \r\n                    placeholder=\"Enter City\" \r\n                    value={city ? city : ''} \r\n                    onChange={(e) => setCity(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>\r\n                        Postal Code \r\n                    </Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type=\"text\" \r\n                    placeholder=\"Enter postal code\" \r\n                    value={postalCode ? postalCode : ''} \r\n                    onChange={(e) => setPostalCode(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                \r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>\r\n                        Country\r\n                    </Form.Label>\r\n                    <Form.Control\r\n                    required\r\n                    type=\"text\" \r\n                    placeholder=\"Enter postal country\" \r\n                    value={country ? country : ''} \r\n                    onChange={(e) => setCountry(e.target.value)}>\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type=\"submit\" variant=\"primary\">\r\n                    Continue\r\n                </Button>\r\n\r\n\r\n            </Form> \r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","D:\\Django-React-Pro-Shop\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\Django-React-Pro-Shop\\frontend\\src\\screens\\PaymentScreen.js",["161"],"import React, {useState, useEffect} from 'react'\r\nimport {Form, Button, Col} from 'react-bootstrap'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport {savePaymentMethod} from '../actions/cartActions'\r\n\r\nfunction PaymentScreen({history}) {\r\n    const cart = useSelector(state => state.cart)\r\n    const {shippingAddress} = cart\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    if(!shippingAddress.address){\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3/>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Payment Method</Form.Label>\r\n                    <Col>\r\n                        <Form.Check \r\n                            type='radio'\r\n                            label='Paypal or Credit Card'\r\n                            id='paypal'\r\n                            name='paymentMethod'\r\n                            checked\r\n                            onChange={(e) => setPaymentMethod(e.target.value) }\r\n                        >\r\n\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","D:\\Django-React-Pro-Shop\\frontend\\src\\screens\\PlaceOrderScreen.js",["162","163"],"import React, {useState, useEffect} from 'react'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport {createOrder} from '../actions/orderActions'\r\nimport {ORDER_CREATE_RESET} from '../constants/orderConstants'\r\nfunction PlaceOrderScreen({history}) {\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const {order, error, success} = orderCreate\r\n\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n\r\n  \r\n\r\n    cart.itemsPrice = cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0).toFixed(2)\r\n    cart.shippingPrice = (cart.itemsPrice > 100 ? 0 : 10 ).toFixed(2)\r\n    cart.taxPrice = Number((0.082) * cart.itemsPrice).toFixed(2)\r\n    cart.totalPrice = Number(Number(cart.itemsPrice) + Number(cart.shippingPrice) + Number(cart.taxPrice)).toFixed(2)\r\n\r\n    if(!cart.paymentMethod)\r\n    {\r\n        history.push('/payment')\r\n        dispatch({type: ORDER_CREATE_RESET})\r\n    }\r\n    useEffect(() => {\r\n        if(success)\r\n        {\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n    }, [success, history])\r\n\r\n    const placeOrder = () => {\r\n        dispatch(createOrder({\r\n            orderItems:cart.cartItems,\r\n            shippingAddress:cart.shippingAddress,\r\n            paymentMehod:cart.paymentMethod,\r\n            itemsPrice:cart.itemsPrice, \r\n            shippingPrice:cart.shippingPrice,\r\n            taxPrice:cart.taxPrice,\r\n            totalPrice:cart.totalPrice\r\n\r\n        }))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <CheckoutSteps step1 step2 step3 step4/>   \r\n            <Row>\r\n                 <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Shipping</h2>\r\n                            <p>\r\n                                <strong>Shipping: </strong>\r\n                                {cart.shippingAddress.address},\r\n                                {''} \r\n                                {cart.shippingAddress.postalCode},\r\n                                {''} \r\n                                {cart.shippingAddress.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                                <strong>Method: </strong>\r\n                                {cart.paymentMethod}\r\n                         \r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                           {cart.cartItems.length === 0 ? <Message variant='info'>\r\n                                Your cart is empty\r\n                           </Message> : (\r\n                               <ListGroup variant='flush'>\r\n                                {cart.cartItems.map((item, index ) => (\r\n                                    <ListGroup.Item key={index}>\r\n                                        <Row>\r\n                                            <Col md={1}>\r\n                                                <Image src={item.image} alt={item.name} fluid rounded/>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                            </Col>\r\n                                            <Col md={4}>\r\n                                                {item.qty} X ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                ))}\r\n                               </ListGroup>\r\n                           )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                 </Col>    \r\n                 <Col md={4}>\r\n                  <Card>\r\n\r\n                      <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Item:</Col>\r\n                                    <Col>${cart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping:</Col>\r\n                                    <Col>${cart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Tax:</Col>\r\n                                    <Col>${cart.taxPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total:</Col>\r\n                                    <Col>${cart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                    {error && <Message variant='danger'>{error}</Message>}\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Button type='button'\r\n                                className='btn-block'\r\n                                disabled={cart.cartItems === 0}\r\n                                onClick={placeOrder}>\r\n                                    Place Order\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n\r\n                      </ListGroup>\r\n                  </Card>\r\n                 </Col>    \r\n            </Row> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","D:\\Django-React-Pro-Shop\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\Django-React-Pro-Shop\\frontend\\src\\constants\\orderConstants.js",[],"D:\\Django-React-Pro-Shop\\frontend\\src\\actions\\orderActions.js",[],{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":3,"column":33,"nodeType":"170","messageId":"171","endLine":3,"endColumn":36},{"ruleId":"168","severity":1,"message":"172","line":1,"column":16,"nodeType":"170","messageId":"171","endLine":1,"endColumn":24},{"ruleId":"173","severity":1,"message":"174","line":17,"column":8,"nodeType":"175","endLine":17,"endColumn":10,"suggestions":"176"},{"ruleId":"164","replacedBy":"177"},{"ruleId":"166","replacedBy":"178"},{"ruleId":"168","severity":1,"message":"179","line":36,"column":7,"nodeType":"170","messageId":"171","endLine":36,"endColumn":17},{"ruleId":"168","severity":1,"message":"180","line":21,"column":5,"nodeType":"170","messageId":"171","endLine":21,"endColumn":30},{"ruleId":"181","severity":1,"message":"182","line":37,"column":21,"nodeType":"183","messageId":"184","endLine":37,"endColumn":23},{"ruleId":"168","severity":1,"message":"185","line":2,"column":9,"nodeType":"170","messageId":"171","endLine":2,"endColumn":13},{"ruleId":"181","severity":1,"message":"182","line":55,"column":21,"nodeType":"183","messageId":"184","endLine":55,"endColumn":23},{"ruleId":"168","severity":1,"message":"186","line":1,"column":26,"nodeType":"170","messageId":"171","endLine":1,"endColumn":35},{"ruleId":"168","severity":1,"message":"186","line":1,"column":26,"nodeType":"170","messageId":"171","endLine":1,"endColumn":35},{"ruleId":"168","severity":1,"message":"172","line":1,"column":16,"nodeType":"170","messageId":"171","endLine":1,"endColumn":24},{"ruleId":"173","severity":1,"message":"187","line":34,"column":8,"nodeType":"175","endLine":34,"endColumn":26,"suggestions":"188"},"no-native-reassign",["189"],"no-negated-in-lhs",["190"],"no-unused-vars","'Row' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["191"],["189"],["190"],"'middleware' is assigned a value but never used.","'USER_UPDATE_PROFILE_RESET' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'Link' is defined but never used.","'useEffect' is defined but never used.","React Hook useEffect has a missing dependency: 'order._id'. Either include it or remove the dependency array.",["192"],"no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},{"desc":"195","fix":"196"},"Update the dependencies array to be: [dispatch]",{"range":"197","text":"198"},"Update the dependencies array to be: [success, history, order._id]",{"range":"199","text":"200"},[591,593],"[dispatch]",[1297,1315],"[success, history, order._id]"]